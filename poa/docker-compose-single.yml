version: "3"

services:
  # The bootnode is the rendez-vous point for all other nodes.
  eth-bootnode:
    image: ethereum/client-go:alltools-v1.10.18
    restart: unless-stopped
    ports:
      - 30303:30303
    volumes:
      - ./scripts:/opt/scripts/:ro
      - ./config/eth:/opt/config/:ro
      - /etc/localtime:/etc/localtime:ro
      - ./data/bootnode:/opt/ethereum:rw
    command: /opt/scripts/bootnode.sh
    networks:
      priv-eth-net:

  # The node container is our entry point to issue RPC commands
  # but it's not sealing.
  eth-node:
    image: ethereum/client-go:alltools-v1.10.18
    restart: unless-stopped
    env_file:
      -  ./envs/eth-single.env
    depends_on:
      - eth-bootnode
    ports:
      - 8544-8546:8544-8546
    volumes:
      - ./scripts:/opt/scripts/:ro
      - ./config/eth:/opt/config/:ro
      - /etc/localtime:/etc/localtime:ro
      - ./data/node:/opt/ethereum:rw
    command: /opt/scripts/node.sh ${VHOSTS:-eth4438.innoxai.com}
    networks:
      priv-eth-net:

  # Miner nodes are workers that commit blocks constantly.
  eth-sealer:
    image: ethereum/client-go:alltools-v1.10.18
    restart: unless-stopped
    depends_on:
      - eth-node
    volumes:
      - ./scripts:/opt/scripts/:ro
      - ./config/eth:/opt/config/:ro
      - /etc/localtime:/etc/localtime:ro
      - ./data/sealer:/opt/ethereum:rw
    command: /opt/scripts/sealer.sh 0x0d2B767809d5dd9a62CAD1DA22Ac9401147cC1f0
    networks:
      priv-eth-net:

  eth-postgres:
    container_name: 'eth-postgres'
    image: postgres:13.6
    depends_on:
      - eth-node
    restart: unless-stopped
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 7432:5432
    networks:
      priv-eth-net:

  eth-blockscout:
    container_name: 'eth-blockscout'
    image: blockscout/blockscout:${DOCKER_TAG:-latest}
    depends_on:
      - eth-postgres
    restart: unless-stopped
    links:
      - eth-postgres:database
    command: 'mix do ecto.create, ecto.migrate, phx.server'
    extra_hosts:
      - 'eth4438.innoxai.com:host-gateway'
    env_file:
      -  ./envs/common-blockscout.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        BLOCK_TRANSFORMER: 'clique'
        ETHEREUM_JSONRPC_HTTP_URL: ${ETHEREUM_JSONRPC_HTTP_URL:-http://eth4438.innoxai.com:8080/}
        DATABASE_URL: postgresql://postgres:@host.docker.internal:7432/blockscout?ssl=false
        ECTO_USE_SSL: 'false'
    ports:
      - 4000:4000
    networks:
      priv-eth-net:

  # nginx setup.
  eth-nginx:
    container_name: 'eth-nginx'
    image: nginx:1.21-alpine
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "4040:4040"
    depends_on:
      - eth-bootnode
      - eth-node
      - eth-sealer
      - eth-postgres
      - eth-blockscout
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/eth4438.innoxai.com-single.conf:/etc/nginx/http.d/eth4438.innoxai.com-single.conf
      - ./config/nginx/eth4438.innoxai.com.key:/etc/ssl/private/eth4438.innoxai.com.key
      - ./config/nginx/eth4438.innoxai.com.crt:/etc/ssl/certs/eth4438.innoxai.com.crt
      - ./config/nginx/blockscout.innoxai.com.key:/etc/ssl/private/blockscout.innoxai.com.key
      - ./config/nginx/blockscout.innoxai.com.crt:/etc/ssl/certs/blockscout.innoxai.com.crt
      - ./data/logs/nginx:/var/log/nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      priv-eth-net:

networks:
  priv-eth-net:
    driver: bridge
    ipam:
      config:
      - subnet: 172.16.254.0/28
